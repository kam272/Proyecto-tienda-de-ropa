/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package VIEW;

import DAO.claseClienteFacturaDetalleDAO;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author Usuario
 */
public class VistaDialogoTodoslosDetalleFacturaclienteprenda extends java.awt.Dialog {
    claseClienteFacturaDetalleDAO clifacdet = new claseClienteFacturaDetalleDAO();
    /**
     * Creates new form VistaDialogoTodoslosDetalleFacturaclienteprenda
     */
    public VistaDialogoTodoslosDetalleFacturaclienteprenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Detalle todas las ventas");
        clifacdet.listarClienteFacturaDetalle(tablaclifacdet);
    }

    public void limpiartablaclifacdet() {
        DefaultTableModel modelo;
      String[] titulos = {"Id cliente","Nombre cliente","Apellidos cliente","Codigo venta","Consecutivo venta","Fecha creacion","Nombre prenda","Categoria", "Cantidad","Valor unitario","Subtotal"};
        modelo = new DefaultTableModel(null, titulos);
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
        tablaclifacdet.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnbuscar = new javax.swing.JButton();
        btnimportar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        btncerrar = new javax.swing.JButton();
        txtcodventa = new javax.swing.JTextField();
        txtconsecutvoventa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        comboopc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaclifacdet = new javax.swing.JTable();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jToolBar1.setBackground(new java.awt.Color(255, 204, 153));
        jToolBar1.setRollover(true);

        btnbuscar.setBackground(new java.awt.Color(255, 153, 102));
        btnbuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnbuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/iconobuscar.png"))); // NOI18N
        btnbuscar.setText("Buscar");
        btnbuscar.setToolTipText("");
        btnbuscar.setFocusable(false);
        btnbuscar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnbuscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnbuscar);

        btnimportar.setBackground(new java.awt.Color(255, 153, 102));
        btnimportar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnimportar.setForeground(new java.awt.Color(0, 0, 0));
        btnimportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/IconoExcel.png"))); // NOI18N
        btnimportar.setText("Importar");
        btnimportar.setToolTipText("");
        btnimportar.setFocusable(false);
        btnimportar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnimportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnimportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnimportar);

        btnactualizar.setBackground(new java.awt.Color(255, 153, 102));
        btnactualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnactualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnactualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/iconoactualizartabla.png"))); // NOI18N
        btnactualizar.setText("Actualizar");
        btnactualizar.setToolTipText("");
        btnactualizar.setFocusable(false);
        btnactualizar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnactualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnactualizar);

        btncerrar.setBackground(new java.awt.Color(255, 153, 102));
        btncerrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btncerrar.setForeground(new java.awt.Color(0, 0, 0));
        btncerrar.setText("Cerrar");
        btncerrar.setFocusable(false);
        btncerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncerrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btncerrar);

        txtcodventa.setToolTipText("");
        txtcodventa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodventaKeyTyped(evt);
            }
        });

        txtconsecutvoventa.setToolTipText("");
        txtconsecutvoventa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconsecutvoventaKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Codigo venta:");

        comboopc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Y", "O" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Consecutivo de la venta:");

        tablaclifacdet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaclifacdet);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtcodventa, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboopc, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtconsecutvoventa))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcodventa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtconsecutvoventa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboopc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed

       String codigoventa = txtcodventa.getText();
    String consecutivoventa = txtconsecutvoventa.getText();
    String opcion = comboopc.getSelectedItem().toString();
    boolean val = clifacdet.listarClienteFacturaDetalleFind(tablaclifacdet, codigoventa, consecutivoventa, opcion);
        if (val==false) {
            JOptionPane.showMessageDialog(null, "No se encontro el dato");
            txtcodventa.setText("");
            txtconsecutvoventa.setText("");
            limpiartablaclifacdet();
            clifacdet.listarClienteFacturaDetalle(tablaclifacdet);
        }
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnimportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportarActionPerformed

        //Crear el archivo
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Achivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false); //activa el cuadro de dialogo para guardar como
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".xls");
            try {
                //Crear el archivo de excel
                File archivoXLS = new File(ruta); //objeto tipo archivo
                if (archivoXLS.exists()) { //pregunta si el archivo existe
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();//crear el archivo
                Workbook libro = new HSSFWorkbook(); //creando el libro de excel
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Datos"); //nombre de la hoja dentro del libro de excel
                hoja.setDisplayGridlines(false); //pongo en blanco las lineas de la hoja
                Row filTitulo = hoja.createRow(0);
                Cell celTitulo = filTitulo.createCell(0);
                celTitulo.setCellValue("LISTADO DE FACTURAS CON CLIENTES Y PRENDAS");
                int filaInicio = 1;
                for (int f = 0; f < tablaclifacdet.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);//creo la fila
                    filaInicio++;
                    for (int c = 0; c < tablaclifacdet.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c); //creo la celda
                        if (f == 0) {
                            celda.setCellValue(tablaclifacdet.getColumnName(c));
                        }
                    }
                }
                filaInicio = 2; //fila del archivo de excel
                for (int f = 0; f < tablaclifacdet.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);
                    filaInicio++;
                    for (int c = 0; c < tablaclifacdet.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (tablaclifacdet.getValueAt(f, c) instanceof Integer) {
                            celda.setCellValue(Integer.parseInt(tablaclifacdet.getValueAt(f, c).toString()));
                        } else {
                            celda.setCellValue(String.valueOf(tablaclifacdet.getValueAt(f, c)));
                        }
                    }
                }
                libro.write(archivo);
                archivo.close();
                Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
            }
        }
    }//GEN-LAST:event_btnimportarActionPerformed

    private void btncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncerrarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btncerrarActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
            txtcodventa.setText("");
            txtconsecutvoventa.setText("");
            limpiartablaclifacdet();
            clifacdet.listarClienteFacturaDetalle(tablaclifacdet);
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void txtcodventaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodventaKeyTyped
         char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtcodventaKeyTyped

    private void txtconsecutvoventaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconsecutvoventaKeyTyped
         char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtconsecutvoventaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaDialogoTodoslosDetalleFacturaclienteprenda dialog = new VistaDialogoTodoslosDetalleFacturaclienteprenda(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btncerrar;
    private javax.swing.JButton btnimportar;
    private javax.swing.JComboBox<String> comboopc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tablaclifacdet;
    private javax.swing.JTextField txtcodventa;
    private javax.swing.JTextField txtconsecutvoventa;
    // End of variables declaration//GEN-END:variables
}
